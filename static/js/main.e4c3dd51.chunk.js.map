{"version":3,"sources":["initial-data.js","components/ListItem.js","components/Column.js","App.js","index.js"],"names":["initialData","tasks","columns","id","title","taskIds","review","completed","columnOrder","Item","styled","div","props","isDragging","ListItem","task","index","deleteTask","columnId","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","maxWidth","wordWrap","content","fill","cursor","onClick","ListDiv","ListHeader","TaskList","ButtonInput","button","DivModal","MdlInput","input","MdlButton","ModalInput","handleTaskSave","useState","open","setShow","setTask","handleClose","e","target","name","Modal","onClose","placeholder","value","onChange","focus","Column","column","isEditMode","setEditMode","columnTitle","setColumnTitle","handleEdit","handleSave","handleChange","length","alert","droppableId","all","background","marginLeft","display","justifyContent","alignItems","marginRight","droppableProps","isDraggingOver","map","Container","Header","header","Footer","footer","App","state","setState","newTask","currentLengthOfTasks","Object","keys","newColumn","push","taskId","newTasks","columnTasks","filter","item","onDragEnd","result","destination","source","startColumn","finishColumn","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","newTaskIds","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4c3dd51.chunk.js","sourcesContent":["const initialData = {\n  tasks: {},\n  columns: {\n    \"pending-tasks\": {\n      id: \"pending-tasks\",\n      title: \"Pending Tasks\",\n      taskIds: [],\n    },\n    \"ongoing-tasks\": {\n      id: \"ongoing-tasks\",\n      title: \"Ongoing Tasks\",\n      taskIds: [],\n    },\n    review: {\n      id: \"review\",\n      title: \"Review\",\n      taskIds: [],\n    },\n    completed: {\n      id: \"completed\",\n      title: \"Completed\",\n      taskIds: [],\n    },\n  },\n  columnOrder: [\"pending-tasks\", \"ongoing-tasks\", \"review\", \"completed\"],\n};\n\nexport default initialData;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nconst Item = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  margin: 1rem 0.8rem;\n  padding: 0.8rem 0.4rem;\n  border-radius: 6px;\n  font-weight: 600;\n  box-shadow: 3px 3px 5px #d3d3d3;\n  background-color: ${props => (props.isDragging ? \"#C7D2FE\" : \"white\")};\n`;\n\nfunction ListItem({ task, index, deleteTask, columnId }) {\n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <Item\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          isDragging={snapshot.isDragging}\n        >\n          <div style={{ maxWidth: \"70%\", wordWrap: \"break-word\" }}>\n            {task.content}\n          </div>\n          <div>\n            <DeleteIcon\n              style={{ fill: \"red\", cursor: \"initial\" }}\n              onClick={() => deleteTask(task.id, columnId)}\n            ></DeleteIcon>\n          </div>\n        </Item>\n      )}\n    </Draggable>\n  );\n}\n\nexport default ListItem;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport Task from \"./ListItem\";\nimport { Modal } from \"@mui/material/\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nconst ListDiv = styled.div`\n  background-color: #f8f8f9;\n  max-width: 400px;\n  margin: 1rem;\n  margin-top: 10rem;\n\n  flex: 1 1 0;\n\n  @media (min-width: 800px) {\n    max-width: 20%;\n  }\n\n  @media (max-width: 800px) {\n    margin-top: 5rem;\n  }\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ListHeader = styled.div`\n  height: 36px;\n  color: white;\n  display: flex;\n  padding: 0.5rem;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  border-radius: 6px;\n  background-color: ${props =>\n    props.id === \"pending-tasks\"\n      ? \"#1c5a7c\"\n      : props.id === \"ongoing-tasks\"\n      ? \"#106354\"\n      : props.id === \"review\"\n      ? \"#71441B\"\n      : props.id === \"completed\"\n      ? \"#54117D\"\n      : \"grey\"};\n`;\n\nconst TaskList = styled.div`\n  padding: 8px;\n  border-radius: 6px;\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\nconst ButtonInput = styled.button`\n  all: unset;\n  height: 30px;\n  border: none;\n  box-shadow: 0 0 3px grey inset;\n  margin: 10px;\n  margin-top: 3px;\n  background-color: white;\n  display: flex;\n  justify-content: flex-end;\n  padding-right: 20px;\n  align-items: center;\n  cursor: pointer;\n  font-size: 1.4rem;\n  font-weight: 700;\n  color: #334155;\n`;\n\nconst DivModal = styled.div`\n  position: absolute;\n  width: 210px;\n  height: 80px;\n  left: calc(50% - 105px);\n  top: calc(50% - 40px);\n  background: grey;\n  & h3: {\n    color: red;\n  }\n`;\n\nconst MdlInput = styled.input`\n  height: 40px;\n  width: 100%;\n  background: white;\n  font-family: \"Courier New\", Courier, monospace;\n  padding: 3px;\n  color: #3f3f46;\n  font-weight: 600;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst MdlButton = styled.button`\n  height: 30px;\n  width: 50%;\n  border: 2px solid #1c5a7c;\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: #1c5a7c;\n`;\n\nfunction ModalInput({ handleTaskSave, columnId }) {\n  const [open, setShow] = useState(false);\n  const [task, setTask] = useState(\"\");\n\n  const handleClose = e => {\n    setShow(false);\n\n    if (e.target.name === \"save\") {\n      handleTaskSave(task, columnId);\n    }\n    setTask(\"\");\n  };\n\n  const handleShow = () => setShow(true);\n\n  const handleInput = e => {\n    setTask(e.target.value);\n  };\n\n  return (\n    <>\n      <ButtonInput onClick={handleShow}>+</ButtonInput>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <DivModal>\n          <MdlInput\n            placeholder=\"task here\"\n            value={task}\n            onChange={handleInput}\n            ref={input => input && input.focus()}\n          ></MdlInput>\n          <MdlButton onClick={handleClose}>close</MdlButton>\n          <MdlButton onClick={handleClose} name=\"save\">\n            save task\n          </MdlButton>\n        </DivModal>\n      </Modal>\n    </>\n  );\n}\n\nfunction Column({ column, tasks, handleTaskSave, deleteTask }) {\n  const [isEditMode, setEditMode] = useState(false);\n  const [columnTitle, setColumnTitle] = useState(column.title);\n\n  const handleEdit = () => {\n    setEditMode(true);\n  };\n\n  const handleSave = () => {\n    setEditMode(false);\n  };\n\n  const handleChange = e => {\n    if (e.target.value.length < 28) {\n      setColumnTitle(e.target.value);\n    } else {\n      alert(\"It is too long\");\n    }\n  };\n\n  return (\n    <ListDiv>\n      <Droppable droppableId={column.id}>\n        {(provided, snapshot) => (\n          <>\n            {isEditMode ? (\n              <ListHeader id={column.id}>\n                <input\n                  value={columnTitle}\n                  onChange={handleChange}\n                  ref={input => input && input.focus()}\n                  style={{\n                    all: \"unset\",\n                    background: \"inherit\",\n                    maxWidth: \"80%\",\n                  }}\n                />\n                <EditIcon onClick={handleEdit} />\n                <SaveIcon onClick={handleSave} style={{ marginLeft: \"1rem\" }} />\n              </ListHeader>\n            ) : (\n              <ListHeader id={column.id}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    wordWrap: \"break-word\",\n                  }}\n                >\n                  <h4 style={{ marginRight: \"1rem\", wordWrap: \"break-word\" }}>\n                    {columnTitle}\n                  </h4>\n                  <EditIcon onClick={handleEdit} />\n                </div>\n              </ListHeader>\n            )}\n            <TaskList\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              isDraggingOver={snapshot.isDraggingOver}\n            >\n              {tasks.map((task, index) => (\n                <div style={{ maxWidth: \"100%\" }} key={task.id}>\n                  <Task\n                    task={task}\n                    index={index}\n                    deleteTask={deleteTask}\n                    columnId={column.id}\n                  ></Task>\n                </div>\n              ))}\n              {provided.placeholder}\n            </TaskList>\n            <ModalInput\n              columnId={column.id}\n              handleTaskSave={handleTaskSave}\n            ></ModalInput>\n          </>\n        )}\n      </Droppable>\n    </ListDiv>\n  );\n}\n\nexport default Column;\n","import { useState, useEffect } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n\nimport initialData from \"./initial-data\";\nimport Column from \"./components/Column\";\n\nconst Container = styled.div`\n  display: flex;\n  flex: 2;\n  justify-content: space-around;\n  align-items: flex-start;\n\n  > div {\n    width: 300px;\n    margin-bottom: 1rem;\n  }\n  @media (max-width: 800px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst Header = styled.header`\n  height: 50px;\n  background: #155e75;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.3rem;\n  color: white;\n  height: 70px;\n  background: #1f2937;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nfunction App() {\n  const [state, setState] = useState(initialData);\n\n  const onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    const startColumn = state.columns[source.droppableId];\n    const finishColumn = state.columns[destination.droppableId];\n\n    if (startColumn === finishColumn) {\n      const newTaskIds = Array.from(startColumn.taskIds);\n\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...startColumn,\n        taskIds: newTaskIds,\n      };\n\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      setState(newState);\n      return;\n    }\n\n    const startTaskIds = Array.from(startColumn.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...startColumn,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finishColumn.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finishColumn,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    setState(newState);\n  };\n\n  const handleTaskSave = (newTask, columnId) => {\n    const currentLengthOfTasks = Object.keys(state.tasks).length;\n\n    const newColumn = state.columns[columnId];\n    newColumn.taskIds.push(`task-${currentLengthOfTasks + 1}`);\n\n    setState({\n      ...state,\n      tasks: {\n        ...state.tasks,\n        [`task-${currentLengthOfTasks + 1}`]: {\n          id: `task-${currentLengthOfTasks + 1}`,\n          content: `${newTask}`,\n        },\n      },\n      columns: {\n        ...state.columns,\n        [columnId]: newColumn,\n      },\n    });\n  };\n\n  const deleteTask = (taskId, columnId) => {\n    const newTasks = { ...state.tasks };\n\n    delete newTasks[taskId];\n\n    let columnTasks = state.columns[columnId].taskIds;\n\n    columnTasks = columnTasks.filter(item => item !== taskId);\n\n    setState({\n      ...state,\n      tasks: newTasks,\n      columns: {\n        ...state.columns,\n        [columnId]: { ...state.columns[columnId], taskIds: columnTasks },\n      },\n    });\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Header>\n        <h2>Sweeft-kanban</h2>\n      </Header>\n      <Container>\n        {state.columnOrder.map(columnId => {\n          const column = state.columns[columnId];\n          const tasks = column.taskIds.map(taskId => state.tasks[taskId]);\n\n          return (\n            <Column\n              key={column.id}\n              column={column}\n              tasks={tasks}\n              handleTaskSave={handleTaskSave}\n              deleteTask={deleteTask}\n            />\n          );\n        })}\n      </Container>\n      <Footer>2021</Footer>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}