{"version":3,"sources":["initial-data.js","components/ListItem.js","components/Column.js","App.js","index.js"],"names":["initialData","tasks","id","content","columns","title","taskIds","review","completed","columnOrder","Item","styled","div","props","isDragging","ListItem","task","index","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","ListDiv","ListHeader","TaskList","Column","column","droppableId","droppableProps","isDraggingOver","map","placeholder","Container","App","useState","state","setState","onDragEnd","result","destination","source","startColumn","finishColumn","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","newTaskIds","newColumn","columnId","taskId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e847bb4f.chunk.js","sourcesContent":["const initialData = {\n  tasks: {\n    \"task-1\": { id: \"task-1\", content: \"write card\" },\n    \"task-2\": { id: \"task-2\", content: \"Learn js\" },\n    \"task-3\": { id: \"task-3\", content: \"Read book\" },\n  },\n  columns: {\n    \"pending-tasks\": {\n      id: \"pending-tasks\",\n      title: \"Pending Tasks\",\n      taskIds: [\"task-1\", \"task-2\", \"task-3\"],\n    },\n    \"ongoing-tasks\": {\n      id: \"ongoing-tasks\",\n      title: \"Ongoing Tasks\",\n      taskIds: [],\n    },\n    review: {\n      id: \"review\",\n      title: \"Review\",\n      taskIds: [],\n    },\n    completed: {\n      id: \"completed\",\n      title: \"Completed\",\n      taskIds: [],\n    },\n  },\n  columnOrder: [\"pending-tasks\", \"ongoing-tasks\", \"review\", \"completed\"],\n};\n\nexport default initialData;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n\nconst Item = styled.div`\n  margin: 1rem 0.8rem;\n  padding: 0.8rem 0.4rem;\n  border-radius: 6px;\n  font-weight: 600;\n  box-shadow: 3px 3px 5px #d3d3d3;\n  background-color: ${props => (props.isDragging ? \"#C7D2FE\" : \"white\")};\n`;\n\nfunction ListItem({ task, index }) {\n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <Item\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          isDragging={snapshot.isDragging}\n        >\n          {task.content}\n        </Item>\n      )}\n    </Draggable>\n  );\n}\n\nexport default ListItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport Task from \"./ListItem\";\n\nconst ListDiv = styled.div`\n  background-color: #f8f8f9;\n  max-width: 400px;\n  margin: 1rem;\n  margin-top: 5rem;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ListHeader = styled.div`\n  height: 36px;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  border-radius: 6px;\n  background-color: #1c5a7c;\n`;\n\nconst TaskList = styled.div`\n  padding: 8px;\n  border-radius: 6px;\n  flex-grow: 1;\n  min-height: 140px;\n`;\n\nfunction Column({ column, tasks }) {\n  return (\n    <ListDiv>\n      <ListHeader>{column.title}</ListHeader>\n      <Droppable droppableId={column.id}>\n        {(provided, snapshot) => (\n          <TaskList\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            isDraggingOver={snapshot.isDraggingOver}\n          >\n            {tasks.map((task, index) => (\n              <Task key={task.id} task={task} index={index} />\n            ))}\n            {provided.placeholder}\n          </TaskList>\n        )}\n      </Droppable>\n    </ListDiv>\n  );\n}\n\nexport default Column;\n","import { useState } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n\nimport initialData from \"./initial-data\";\nimport Column from \"./components/Column\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  > div {\n    width: 300px;\n    margin-bottom: 1rem;\n  }\n  @media (max-width: 800px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nfunction App() {\n  const [state, setState] = useState(initialData);\n\n  const onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    const startColumn = state.columns[source.droppableId];\n    const finishColumn = state.columns[destination.droppableId];\n\n    if (startColumn === finishColumn) {\n      const newTaskIds = Array.from(startColumn.taskIds);\n\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...startColumn,\n        taskIds: newTaskIds,\n      };\n\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      setState(newState);\n      return;\n    }\n\n    const startTaskIds = Array.from(startColumn.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...startColumn,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finishColumn.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finishColumn,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    setState(newState);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Container>\n        {state.columnOrder.map(columnId => {\n          const column = state.columns[columnId];\n          const tasks = column.taskIds.map(taskId => state.tasks[taskId]);\n\n          return <Column key={column.id} column={column} tasks={tasks} />;\n        })}\n      </Container>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}